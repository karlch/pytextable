[tox]
envlist = test,lint,packaging,mypy

[testenv]
setenv =
   cov: PYTEST_ADDOPTS= --cov {envsitepackagesdir}/pytextable --cov-report xml:{toxinidir}/coverage/coverage.xml --cov-report html:{toxinidir}/coverage/html
passenv = PYTHONPATH CI USER HOME XDG_*
basepython = {env:PYTHON:python3}
deps =
    -r{toxinidir}/misc/requirements/requirements_tests.txt
    cov: -r{toxinidir}/misc/requirements/requirements_cov.txt

commands = pytest {posargs}

# Linters and checkers for the source code
[testenv:lint]
ignore_errors = true
deps =
    -r{toxinidir}/misc/requirements/requirements_lint.txt

commands =
    pylint pytextable
    pycodestyle pytextable
    pydocstyle pytextable

# Check the packaging for best-practices and completeness
[testenv:packaging]
ignore_errors = true
deps =
    -r{toxinidir}/misc/requirements/requirements_packaging.txt
commands =
    pyroma .
    check-manifest

# Check for errors with type annotations
[testenv:mypy]
passenv = PYTHONPATH CI TERM
deps =
    -r{toxinidir}/misc/requirements/requirements_mypy.txt
commands = mypy pytextable

# Create a virtual environment to build the documentation
[testenv:docs]
deps =
    -r{toxinidir}/misc/requirements/requirements_docs.txt
commands =
    sphinx-build -b html docs {posargs}

# Settings for pycodestyle
[pycodestyle]
max-line-length = 88
# E203: whitespace before ':' wrongly raised for slicing
# W503: line break before binary operator does not conform to pep8
ignore = E203,W503

# Settings for check-manifest
[check-manifest]
ignore =
    .*
    pytest.ini
    tox.ini
    mypy.ini
    tests
    tests/*
